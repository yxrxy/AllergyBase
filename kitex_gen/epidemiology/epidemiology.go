// Code generated by thriftgo (0.4.1). DO NOT EDIT.

package epidemiology

import (
	"context"
	"fmt"
	"github.com/yxrxy/AllergyBase/kitex_gen/model"
)

type CreateEnvironmentExposureRequest struct {
	Exposure *model.EnvironmentExposure `thrift:"exposure,1,required" frugal:"1,required,model.EnvironmentExposure" json:"exposure"`
}

func NewCreateEnvironmentExposureRequest() *CreateEnvironmentExposureRequest {
	return &CreateEnvironmentExposureRequest{}
}

func (p *CreateEnvironmentExposureRequest) InitDefault() {
}

var CreateEnvironmentExposureRequest_Exposure_DEFAULT *model.EnvironmentExposure

func (p *CreateEnvironmentExposureRequest) GetExposure() (v *model.EnvironmentExposure) {
	if !p.IsSetExposure() {
		return CreateEnvironmentExposureRequest_Exposure_DEFAULT
	}
	return p.Exposure
}
func (p *CreateEnvironmentExposureRequest) SetExposure(val *model.EnvironmentExposure) {
	p.Exposure = val
}

func (p *CreateEnvironmentExposureRequest) IsSetExposure() bool {
	return p.Exposure != nil
}

func (p *CreateEnvironmentExposureRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateEnvironmentExposureRequest(%+v)", *p)
}

var fieldIDToName_CreateEnvironmentExposureRequest = map[int16]string{
	1: "exposure",
}

type CreateEnvironmentExposureResponse struct {
	Base       *model.BaseResp `thrift:"Base,1,required" frugal:"1,required,model.BaseResp" json:"Base"`
	ExposureId int64           `thrift:"exposureId,2,required" frugal:"2,required,i64" json:"exposureId"`
}

func NewCreateEnvironmentExposureResponse() *CreateEnvironmentExposureResponse {
	return &CreateEnvironmentExposureResponse{}
}

func (p *CreateEnvironmentExposureResponse) InitDefault() {
}

var CreateEnvironmentExposureResponse_Base_DEFAULT *model.BaseResp

func (p *CreateEnvironmentExposureResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return CreateEnvironmentExposureResponse_Base_DEFAULT
	}
	return p.Base
}

func (p *CreateEnvironmentExposureResponse) GetExposureId() (v int64) {
	return p.ExposureId
}
func (p *CreateEnvironmentExposureResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *CreateEnvironmentExposureResponse) SetExposureId(val int64) {
	p.ExposureId = val
}

func (p *CreateEnvironmentExposureResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *CreateEnvironmentExposureResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateEnvironmentExposureResponse(%+v)", *p)
}

var fieldIDToName_CreateEnvironmentExposureResponse = map[int16]string{
	1: "Base",
	2: "exposureId",
}

type GetEnvironmentExposureRequest struct {
	PatientId int64 `thrift:"patientId,1,required" frugal:"1,required,i64" json:"patientId"`
}

func NewGetEnvironmentExposureRequest() *GetEnvironmentExposureRequest {
	return &GetEnvironmentExposureRequest{}
}

func (p *GetEnvironmentExposureRequest) InitDefault() {
}

func (p *GetEnvironmentExposureRequest) GetPatientId() (v int64) {
	return p.PatientId
}
func (p *GetEnvironmentExposureRequest) SetPatientId(val int64) {
	p.PatientId = val
}

func (p *GetEnvironmentExposureRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetEnvironmentExposureRequest(%+v)", *p)
}

var fieldIDToName_GetEnvironmentExposureRequest = map[int16]string{
	1: "patientId",
}

type GetEnvironmentExposureResponse struct {
	Base     *model.BaseResp            `thrift:"Base,1,required" frugal:"1,required,model.BaseResp" json:"Base"`
	Exposure *model.EnvironmentExposure `thrift:"exposure,2,required" frugal:"2,required,model.EnvironmentExposure" json:"exposure"`
}

func NewGetEnvironmentExposureResponse() *GetEnvironmentExposureResponse {
	return &GetEnvironmentExposureResponse{}
}

func (p *GetEnvironmentExposureResponse) InitDefault() {
}

var GetEnvironmentExposureResponse_Base_DEFAULT *model.BaseResp

func (p *GetEnvironmentExposureResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetEnvironmentExposureResponse_Base_DEFAULT
	}
	return p.Base
}

var GetEnvironmentExposureResponse_Exposure_DEFAULT *model.EnvironmentExposure

func (p *GetEnvironmentExposureResponse) GetExposure() (v *model.EnvironmentExposure) {
	if !p.IsSetExposure() {
		return GetEnvironmentExposureResponse_Exposure_DEFAULT
	}
	return p.Exposure
}
func (p *GetEnvironmentExposureResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetEnvironmentExposureResponse) SetExposure(val *model.EnvironmentExposure) {
	p.Exposure = val
}

func (p *GetEnvironmentExposureResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetEnvironmentExposureResponse) IsSetExposure() bool {
	return p.Exposure != nil
}

func (p *GetEnvironmentExposureResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetEnvironmentExposureResponse(%+v)", *p)
}

var fieldIDToName_GetEnvironmentExposureResponse = map[int16]string{
	1: "Base",
	2: "exposure",
}

type GetPatientEnvironmentExposuresRequest struct {
	PatientId int64 `thrift:"patientId,1,required" frugal:"1,required,i64" json:"patientId"`
	Offset    int32 `thrift:"offset,2,required" frugal:"2,required,i32" json:"offset"`
	Limit     int32 `thrift:"limit,3,required" frugal:"3,required,i32" json:"limit"`
}

func NewGetPatientEnvironmentExposuresRequest() *GetPatientEnvironmentExposuresRequest {
	return &GetPatientEnvironmentExposuresRequest{}
}

func (p *GetPatientEnvironmentExposuresRequest) InitDefault() {
}

func (p *GetPatientEnvironmentExposuresRequest) GetPatientId() (v int64) {
	return p.PatientId
}

func (p *GetPatientEnvironmentExposuresRequest) GetOffset() (v int32) {
	return p.Offset
}

func (p *GetPatientEnvironmentExposuresRequest) GetLimit() (v int32) {
	return p.Limit
}
func (p *GetPatientEnvironmentExposuresRequest) SetPatientId(val int64) {
	p.PatientId = val
}
func (p *GetPatientEnvironmentExposuresRequest) SetOffset(val int32) {
	p.Offset = val
}
func (p *GetPatientEnvironmentExposuresRequest) SetLimit(val int32) {
	p.Limit = val
}

func (p *GetPatientEnvironmentExposuresRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetPatientEnvironmentExposuresRequest(%+v)", *p)
}

var fieldIDToName_GetPatientEnvironmentExposuresRequest = map[int16]string{
	1: "patientId",
	2: "offset",
	3: "limit",
}

type GetPatientEnvironmentExposuresResponse struct {
	Base      *model.BaseResp              `thrift:"Base,1,required" frugal:"1,required,model.BaseResp" json:"Base"`
	Exposures []*model.EnvironmentExposure `thrift:"exposures,2,required" frugal:"2,required,list<model.EnvironmentExposure>" json:"exposures"`
	Total     int32                        `thrift:"total,3,required" frugal:"3,required,i32" json:"total"`
}

func NewGetPatientEnvironmentExposuresResponse() *GetPatientEnvironmentExposuresResponse {
	return &GetPatientEnvironmentExposuresResponse{}
}

func (p *GetPatientEnvironmentExposuresResponse) InitDefault() {
}

var GetPatientEnvironmentExposuresResponse_Base_DEFAULT *model.BaseResp

func (p *GetPatientEnvironmentExposuresResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetPatientEnvironmentExposuresResponse_Base_DEFAULT
	}
	return p.Base
}

func (p *GetPatientEnvironmentExposuresResponse) GetExposures() (v []*model.EnvironmentExposure) {
	return p.Exposures
}

func (p *GetPatientEnvironmentExposuresResponse) GetTotal() (v int32) {
	return p.Total
}
func (p *GetPatientEnvironmentExposuresResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetPatientEnvironmentExposuresResponse) SetExposures(val []*model.EnvironmentExposure) {
	p.Exposures = val
}
func (p *GetPatientEnvironmentExposuresResponse) SetTotal(val int32) {
	p.Total = val
}

func (p *GetPatientEnvironmentExposuresResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetPatientEnvironmentExposuresResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetPatientEnvironmentExposuresResponse(%+v)", *p)
}

var fieldIDToName_GetPatientEnvironmentExposuresResponse = map[int16]string{
	1: "Base",
	2: "exposures",
	3: "total",
}

type AddEnvironmentMonitorRequest struct {
	Monitor *model.EnvironmentMonitor `thrift:"monitor,1,required" frugal:"1,required,model.EnvironmentMonitor" json:"monitor"`
}

func NewAddEnvironmentMonitorRequest() *AddEnvironmentMonitorRequest {
	return &AddEnvironmentMonitorRequest{}
}

func (p *AddEnvironmentMonitorRequest) InitDefault() {
}

var AddEnvironmentMonitorRequest_Monitor_DEFAULT *model.EnvironmentMonitor

func (p *AddEnvironmentMonitorRequest) GetMonitor() (v *model.EnvironmentMonitor) {
	if !p.IsSetMonitor() {
		return AddEnvironmentMonitorRequest_Monitor_DEFAULT
	}
	return p.Monitor
}
func (p *AddEnvironmentMonitorRequest) SetMonitor(val *model.EnvironmentMonitor) {
	p.Monitor = val
}

func (p *AddEnvironmentMonitorRequest) IsSetMonitor() bool {
	return p.Monitor != nil
}

func (p *AddEnvironmentMonitorRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddEnvironmentMonitorRequest(%+v)", *p)
}

var fieldIDToName_AddEnvironmentMonitorRequest = map[int16]string{
	1: "monitor",
}

type AddEnvironmentMonitorResponse struct {
	Base      *model.BaseResp `thrift:"Base,1,required" frugal:"1,required,model.BaseResp" json:"Base"`
	MonitorId int64           `thrift:"monitorId,2,required" frugal:"2,required,i64" json:"monitorId"`
}

func NewAddEnvironmentMonitorResponse() *AddEnvironmentMonitorResponse {
	return &AddEnvironmentMonitorResponse{}
}

func (p *AddEnvironmentMonitorResponse) InitDefault() {
}

var AddEnvironmentMonitorResponse_Base_DEFAULT *model.BaseResp

func (p *AddEnvironmentMonitorResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return AddEnvironmentMonitorResponse_Base_DEFAULT
	}
	return p.Base
}

func (p *AddEnvironmentMonitorResponse) GetMonitorId() (v int64) {
	return p.MonitorId
}
func (p *AddEnvironmentMonitorResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *AddEnvironmentMonitorResponse) SetMonitorId(val int64) {
	p.MonitorId = val
}

func (p *AddEnvironmentMonitorResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *AddEnvironmentMonitorResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("AddEnvironmentMonitorResponse(%+v)", *p)
}

var fieldIDToName_AddEnvironmentMonitorResponse = map[int16]string{
	1: "Base",
	2: "monitorId",
}

type GetEnvironmentMonitorsRequest struct {
	LocationCode string `thrift:"locationCode,1,required" frugal:"1,required,string" json:"locationCode"`
	StartTime    string `thrift:"startTime,2,required" frugal:"2,required,string" json:"startTime"`
	EndTime      string `thrift:"endTime,3,required" frugal:"3,required,string" json:"endTime"`
}

func NewGetEnvironmentMonitorsRequest() *GetEnvironmentMonitorsRequest {
	return &GetEnvironmentMonitorsRequest{}
}

func (p *GetEnvironmentMonitorsRequest) InitDefault() {
}

func (p *GetEnvironmentMonitorsRequest) GetLocationCode() (v string) {
	return p.LocationCode
}

func (p *GetEnvironmentMonitorsRequest) GetStartTime() (v string) {
	return p.StartTime
}

func (p *GetEnvironmentMonitorsRequest) GetEndTime() (v string) {
	return p.EndTime
}
func (p *GetEnvironmentMonitorsRequest) SetLocationCode(val string) {
	p.LocationCode = val
}
func (p *GetEnvironmentMonitorsRequest) SetStartTime(val string) {
	p.StartTime = val
}
func (p *GetEnvironmentMonitorsRequest) SetEndTime(val string) {
	p.EndTime = val
}

func (p *GetEnvironmentMonitorsRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetEnvironmentMonitorsRequest(%+v)", *p)
}

var fieldIDToName_GetEnvironmentMonitorsRequest = map[int16]string{
	1: "locationCode",
	2: "startTime",
	3: "endTime",
}

type GetEnvironmentMonitorsResponse struct {
	Base     *model.BaseResp             `thrift:"Base,1,required" frugal:"1,required,model.BaseResp" json:"Base"`
	Monitors []*model.EnvironmentMonitor `thrift:"monitors,2,required" frugal:"2,required,list<model.EnvironmentMonitor>" json:"monitors"`
}

func NewGetEnvironmentMonitorsResponse() *GetEnvironmentMonitorsResponse {
	return &GetEnvironmentMonitorsResponse{}
}

func (p *GetEnvironmentMonitorsResponse) InitDefault() {
}

var GetEnvironmentMonitorsResponse_Base_DEFAULT *model.BaseResp

func (p *GetEnvironmentMonitorsResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetEnvironmentMonitorsResponse_Base_DEFAULT
	}
	return p.Base
}

func (p *GetEnvironmentMonitorsResponse) GetMonitors() (v []*model.EnvironmentMonitor) {
	return p.Monitors
}
func (p *GetEnvironmentMonitorsResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetEnvironmentMonitorsResponse) SetMonitors(val []*model.EnvironmentMonitor) {
	p.Monitors = val
}

func (p *GetEnvironmentMonitorsResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetEnvironmentMonitorsResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetEnvironmentMonitorsResponse(%+v)", *p)
}

var fieldIDToName_GetEnvironmentMonitorsResponse = map[int16]string{
	1: "Base",
	2: "monitors",
}

type CreateLifestyleSurveyRequest struct {
	Survey *model.LifestyleSurvey `thrift:"survey,1,required" frugal:"1,required,model.LifestyleSurvey" json:"survey"`
}

func NewCreateLifestyleSurveyRequest() *CreateLifestyleSurveyRequest {
	return &CreateLifestyleSurveyRequest{}
}

func (p *CreateLifestyleSurveyRequest) InitDefault() {
}

var CreateLifestyleSurveyRequest_Survey_DEFAULT *model.LifestyleSurvey

func (p *CreateLifestyleSurveyRequest) GetSurvey() (v *model.LifestyleSurvey) {
	if !p.IsSetSurvey() {
		return CreateLifestyleSurveyRequest_Survey_DEFAULT
	}
	return p.Survey
}
func (p *CreateLifestyleSurveyRequest) SetSurvey(val *model.LifestyleSurvey) {
	p.Survey = val
}

func (p *CreateLifestyleSurveyRequest) IsSetSurvey() bool {
	return p.Survey != nil
}

func (p *CreateLifestyleSurveyRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateLifestyleSurveyRequest(%+v)", *p)
}

var fieldIDToName_CreateLifestyleSurveyRequest = map[int16]string{
	1: "survey",
}

type CreateLifestyleSurveyResponse struct {
	Base     *model.BaseResp `thrift:"Base,1,required" frugal:"1,required,model.BaseResp" json:"Base"`
	SurveyId int64           `thrift:"surveyId,2,required" frugal:"2,required,i64" json:"surveyId"`
}

func NewCreateLifestyleSurveyResponse() *CreateLifestyleSurveyResponse {
	return &CreateLifestyleSurveyResponse{}
}

func (p *CreateLifestyleSurveyResponse) InitDefault() {
}

var CreateLifestyleSurveyResponse_Base_DEFAULT *model.BaseResp

func (p *CreateLifestyleSurveyResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return CreateLifestyleSurveyResponse_Base_DEFAULT
	}
	return p.Base
}

func (p *CreateLifestyleSurveyResponse) GetSurveyId() (v int64) {
	return p.SurveyId
}
func (p *CreateLifestyleSurveyResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *CreateLifestyleSurveyResponse) SetSurveyId(val int64) {
	p.SurveyId = val
}

func (p *CreateLifestyleSurveyResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *CreateLifestyleSurveyResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("CreateLifestyleSurveyResponse(%+v)", *p)
}

var fieldIDToName_CreateLifestyleSurveyResponse = map[int16]string{
	1: "Base",
	2: "surveyId",
}

type GetLifestyleSurveyRequest struct {
	PatientId int64 `thrift:"patientId,1,required" frugal:"1,required,i64" json:"patientId"`
}

func NewGetLifestyleSurveyRequest() *GetLifestyleSurveyRequest {
	return &GetLifestyleSurveyRequest{}
}

func (p *GetLifestyleSurveyRequest) InitDefault() {
}

func (p *GetLifestyleSurveyRequest) GetPatientId() (v int64) {
	return p.PatientId
}
func (p *GetLifestyleSurveyRequest) SetPatientId(val int64) {
	p.PatientId = val
}

func (p *GetLifestyleSurveyRequest) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetLifestyleSurveyRequest(%+v)", *p)
}

var fieldIDToName_GetLifestyleSurveyRequest = map[int16]string{
	1: "patientId",
}

type GetLifestyleSurveyResponse struct {
	Base   *model.BaseResp        `thrift:"Base,1,required" frugal:"1,required,model.BaseResp" json:"Base"`
	Survey *model.LifestyleSurvey `thrift:"survey,2,required" frugal:"2,required,model.LifestyleSurvey" json:"survey"`
}

func NewGetLifestyleSurveyResponse() *GetLifestyleSurveyResponse {
	return &GetLifestyleSurveyResponse{}
}

func (p *GetLifestyleSurveyResponse) InitDefault() {
}

var GetLifestyleSurveyResponse_Base_DEFAULT *model.BaseResp

func (p *GetLifestyleSurveyResponse) GetBase() (v *model.BaseResp) {
	if !p.IsSetBase() {
		return GetLifestyleSurveyResponse_Base_DEFAULT
	}
	return p.Base
}

var GetLifestyleSurveyResponse_Survey_DEFAULT *model.LifestyleSurvey

func (p *GetLifestyleSurveyResponse) GetSurvey() (v *model.LifestyleSurvey) {
	if !p.IsSetSurvey() {
		return GetLifestyleSurveyResponse_Survey_DEFAULT
	}
	return p.Survey
}
func (p *GetLifestyleSurveyResponse) SetBase(val *model.BaseResp) {
	p.Base = val
}
func (p *GetLifestyleSurveyResponse) SetSurvey(val *model.LifestyleSurvey) {
	p.Survey = val
}

func (p *GetLifestyleSurveyResponse) IsSetBase() bool {
	return p.Base != nil
}

func (p *GetLifestyleSurveyResponse) IsSetSurvey() bool {
	return p.Survey != nil
}

func (p *GetLifestyleSurveyResponse) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("GetLifestyleSurveyResponse(%+v)", *p)
}

var fieldIDToName_GetLifestyleSurveyResponse = map[int16]string{
	1: "Base",
	2: "survey",
}

type EpidemiologyService interface {
	CreateEnvironmentExposure(ctx context.Context, req *CreateEnvironmentExposureRequest) (r *CreateEnvironmentExposureResponse, err error)

	GetEnvironmentExposure(ctx context.Context, req *GetEnvironmentExposureRequest) (r *GetEnvironmentExposureResponse, err error)

	GetPatientEnvironmentExposures(ctx context.Context, req *GetPatientEnvironmentExposuresRequest) (r *GetPatientEnvironmentExposuresResponse, err error)

	AddEnvironmentMonitor(ctx context.Context, req *AddEnvironmentMonitorRequest) (r *AddEnvironmentMonitorResponse, err error)

	GetEnvironmentMonitors(ctx context.Context, req *GetEnvironmentMonitorsRequest) (r *GetEnvironmentMonitorsResponse, err error)

	CreateLifestyleSurvey(ctx context.Context, req *CreateLifestyleSurveyRequest) (r *CreateLifestyleSurveyResponse, err error)

	GetLifestyleSurvey(ctx context.Context, req *GetLifestyleSurveyRequest) (r *GetLifestyleSurveyResponse, err error)
}

type EpidemiologyServiceCreateEnvironmentExposureArgs struct {
	Req *CreateEnvironmentExposureRequest `thrift:"req,1" frugal:"1,default,CreateEnvironmentExposureRequest" json:"req"`
}

func NewEpidemiologyServiceCreateEnvironmentExposureArgs() *EpidemiologyServiceCreateEnvironmentExposureArgs {
	return &EpidemiologyServiceCreateEnvironmentExposureArgs{}
}

func (p *EpidemiologyServiceCreateEnvironmentExposureArgs) InitDefault() {
}

var EpidemiologyServiceCreateEnvironmentExposureArgs_Req_DEFAULT *CreateEnvironmentExposureRequest

func (p *EpidemiologyServiceCreateEnvironmentExposureArgs) GetReq() (v *CreateEnvironmentExposureRequest) {
	if !p.IsSetReq() {
		return EpidemiologyServiceCreateEnvironmentExposureArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *EpidemiologyServiceCreateEnvironmentExposureArgs) SetReq(val *CreateEnvironmentExposureRequest) {
	p.Req = val
}

func (p *EpidemiologyServiceCreateEnvironmentExposureArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *EpidemiologyServiceCreateEnvironmentExposureArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceCreateEnvironmentExposureArgs(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceCreateEnvironmentExposureArgs = map[int16]string{
	1: "req",
}

type EpidemiologyServiceCreateEnvironmentExposureResult struct {
	Success *CreateEnvironmentExposureResponse `thrift:"success,0,optional" frugal:"0,optional,CreateEnvironmentExposureResponse" json:"success,omitempty"`
}

func NewEpidemiologyServiceCreateEnvironmentExposureResult() *EpidemiologyServiceCreateEnvironmentExposureResult {
	return &EpidemiologyServiceCreateEnvironmentExposureResult{}
}

func (p *EpidemiologyServiceCreateEnvironmentExposureResult) InitDefault() {
}

var EpidemiologyServiceCreateEnvironmentExposureResult_Success_DEFAULT *CreateEnvironmentExposureResponse

func (p *EpidemiologyServiceCreateEnvironmentExposureResult) GetSuccess() (v *CreateEnvironmentExposureResponse) {
	if !p.IsSetSuccess() {
		return EpidemiologyServiceCreateEnvironmentExposureResult_Success_DEFAULT
	}
	return p.Success
}
func (p *EpidemiologyServiceCreateEnvironmentExposureResult) SetSuccess(x interface{}) {
	p.Success = x.(*CreateEnvironmentExposureResponse)
}

func (p *EpidemiologyServiceCreateEnvironmentExposureResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *EpidemiologyServiceCreateEnvironmentExposureResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceCreateEnvironmentExposureResult(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceCreateEnvironmentExposureResult = map[int16]string{
	0: "success",
}

type EpidemiologyServiceGetEnvironmentExposureArgs struct {
	Req *GetEnvironmentExposureRequest `thrift:"req,1" frugal:"1,default,GetEnvironmentExposureRequest" json:"req"`
}

func NewEpidemiologyServiceGetEnvironmentExposureArgs() *EpidemiologyServiceGetEnvironmentExposureArgs {
	return &EpidemiologyServiceGetEnvironmentExposureArgs{}
}

func (p *EpidemiologyServiceGetEnvironmentExposureArgs) InitDefault() {
}

var EpidemiologyServiceGetEnvironmentExposureArgs_Req_DEFAULT *GetEnvironmentExposureRequest

func (p *EpidemiologyServiceGetEnvironmentExposureArgs) GetReq() (v *GetEnvironmentExposureRequest) {
	if !p.IsSetReq() {
		return EpidemiologyServiceGetEnvironmentExposureArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *EpidemiologyServiceGetEnvironmentExposureArgs) SetReq(val *GetEnvironmentExposureRequest) {
	p.Req = val
}

func (p *EpidemiologyServiceGetEnvironmentExposureArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *EpidemiologyServiceGetEnvironmentExposureArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetEnvironmentExposureArgs(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetEnvironmentExposureArgs = map[int16]string{
	1: "req",
}

type EpidemiologyServiceGetEnvironmentExposureResult struct {
	Success *GetEnvironmentExposureResponse `thrift:"success,0,optional" frugal:"0,optional,GetEnvironmentExposureResponse" json:"success,omitempty"`
}

func NewEpidemiologyServiceGetEnvironmentExposureResult() *EpidemiologyServiceGetEnvironmentExposureResult {
	return &EpidemiologyServiceGetEnvironmentExposureResult{}
}

func (p *EpidemiologyServiceGetEnvironmentExposureResult) InitDefault() {
}

var EpidemiologyServiceGetEnvironmentExposureResult_Success_DEFAULT *GetEnvironmentExposureResponse

func (p *EpidemiologyServiceGetEnvironmentExposureResult) GetSuccess() (v *GetEnvironmentExposureResponse) {
	if !p.IsSetSuccess() {
		return EpidemiologyServiceGetEnvironmentExposureResult_Success_DEFAULT
	}
	return p.Success
}
func (p *EpidemiologyServiceGetEnvironmentExposureResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetEnvironmentExposureResponse)
}

func (p *EpidemiologyServiceGetEnvironmentExposureResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *EpidemiologyServiceGetEnvironmentExposureResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetEnvironmentExposureResult(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetEnvironmentExposureResult = map[int16]string{
	0: "success",
}

type EpidemiologyServiceGetPatientEnvironmentExposuresArgs struct {
	Req *GetPatientEnvironmentExposuresRequest `thrift:"req,1" frugal:"1,default,GetPatientEnvironmentExposuresRequest" json:"req"`
}

func NewEpidemiologyServiceGetPatientEnvironmentExposuresArgs() *EpidemiologyServiceGetPatientEnvironmentExposuresArgs {
	return &EpidemiologyServiceGetPatientEnvironmentExposuresArgs{}
}

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresArgs) InitDefault() {
}

var EpidemiologyServiceGetPatientEnvironmentExposuresArgs_Req_DEFAULT *GetPatientEnvironmentExposuresRequest

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresArgs) GetReq() (v *GetPatientEnvironmentExposuresRequest) {
	if !p.IsSetReq() {
		return EpidemiologyServiceGetPatientEnvironmentExposuresArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *EpidemiologyServiceGetPatientEnvironmentExposuresArgs) SetReq(val *GetPatientEnvironmentExposuresRequest) {
	p.Req = val
}

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetPatientEnvironmentExposuresArgs(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetPatientEnvironmentExposuresArgs = map[int16]string{
	1: "req",
}

type EpidemiologyServiceGetPatientEnvironmentExposuresResult struct {
	Success *GetPatientEnvironmentExposuresResponse `thrift:"success,0,optional" frugal:"0,optional,GetPatientEnvironmentExposuresResponse" json:"success,omitempty"`
}

func NewEpidemiologyServiceGetPatientEnvironmentExposuresResult() *EpidemiologyServiceGetPatientEnvironmentExposuresResult {
	return &EpidemiologyServiceGetPatientEnvironmentExposuresResult{}
}

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresResult) InitDefault() {
}

var EpidemiologyServiceGetPatientEnvironmentExposuresResult_Success_DEFAULT *GetPatientEnvironmentExposuresResponse

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresResult) GetSuccess() (v *GetPatientEnvironmentExposuresResponse) {
	if !p.IsSetSuccess() {
		return EpidemiologyServiceGetPatientEnvironmentExposuresResult_Success_DEFAULT
	}
	return p.Success
}
func (p *EpidemiologyServiceGetPatientEnvironmentExposuresResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetPatientEnvironmentExposuresResponse)
}

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *EpidemiologyServiceGetPatientEnvironmentExposuresResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetPatientEnvironmentExposuresResult(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetPatientEnvironmentExposuresResult = map[int16]string{
	0: "success",
}

type EpidemiologyServiceAddEnvironmentMonitorArgs struct {
	Req *AddEnvironmentMonitorRequest `thrift:"req,1" frugal:"1,default,AddEnvironmentMonitorRequest" json:"req"`
}

func NewEpidemiologyServiceAddEnvironmentMonitorArgs() *EpidemiologyServiceAddEnvironmentMonitorArgs {
	return &EpidemiologyServiceAddEnvironmentMonitorArgs{}
}

func (p *EpidemiologyServiceAddEnvironmentMonitorArgs) InitDefault() {
}

var EpidemiologyServiceAddEnvironmentMonitorArgs_Req_DEFAULT *AddEnvironmentMonitorRequest

func (p *EpidemiologyServiceAddEnvironmentMonitorArgs) GetReq() (v *AddEnvironmentMonitorRequest) {
	if !p.IsSetReq() {
		return EpidemiologyServiceAddEnvironmentMonitorArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *EpidemiologyServiceAddEnvironmentMonitorArgs) SetReq(val *AddEnvironmentMonitorRequest) {
	p.Req = val
}

func (p *EpidemiologyServiceAddEnvironmentMonitorArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *EpidemiologyServiceAddEnvironmentMonitorArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceAddEnvironmentMonitorArgs(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceAddEnvironmentMonitorArgs = map[int16]string{
	1: "req",
}

type EpidemiologyServiceAddEnvironmentMonitorResult struct {
	Success *AddEnvironmentMonitorResponse `thrift:"success,0,optional" frugal:"0,optional,AddEnvironmentMonitorResponse" json:"success,omitempty"`
}

func NewEpidemiologyServiceAddEnvironmentMonitorResult() *EpidemiologyServiceAddEnvironmentMonitorResult {
	return &EpidemiologyServiceAddEnvironmentMonitorResult{}
}

func (p *EpidemiologyServiceAddEnvironmentMonitorResult) InitDefault() {
}

var EpidemiologyServiceAddEnvironmentMonitorResult_Success_DEFAULT *AddEnvironmentMonitorResponse

func (p *EpidemiologyServiceAddEnvironmentMonitorResult) GetSuccess() (v *AddEnvironmentMonitorResponse) {
	if !p.IsSetSuccess() {
		return EpidemiologyServiceAddEnvironmentMonitorResult_Success_DEFAULT
	}
	return p.Success
}
func (p *EpidemiologyServiceAddEnvironmentMonitorResult) SetSuccess(x interface{}) {
	p.Success = x.(*AddEnvironmentMonitorResponse)
}

func (p *EpidemiologyServiceAddEnvironmentMonitorResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *EpidemiologyServiceAddEnvironmentMonitorResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceAddEnvironmentMonitorResult(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceAddEnvironmentMonitorResult = map[int16]string{
	0: "success",
}

type EpidemiologyServiceGetEnvironmentMonitorsArgs struct {
	Req *GetEnvironmentMonitorsRequest `thrift:"req,1" frugal:"1,default,GetEnvironmentMonitorsRequest" json:"req"`
}

func NewEpidemiologyServiceGetEnvironmentMonitorsArgs() *EpidemiologyServiceGetEnvironmentMonitorsArgs {
	return &EpidemiologyServiceGetEnvironmentMonitorsArgs{}
}

func (p *EpidemiologyServiceGetEnvironmentMonitorsArgs) InitDefault() {
}

var EpidemiologyServiceGetEnvironmentMonitorsArgs_Req_DEFAULT *GetEnvironmentMonitorsRequest

func (p *EpidemiologyServiceGetEnvironmentMonitorsArgs) GetReq() (v *GetEnvironmentMonitorsRequest) {
	if !p.IsSetReq() {
		return EpidemiologyServiceGetEnvironmentMonitorsArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *EpidemiologyServiceGetEnvironmentMonitorsArgs) SetReq(val *GetEnvironmentMonitorsRequest) {
	p.Req = val
}

func (p *EpidemiologyServiceGetEnvironmentMonitorsArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *EpidemiologyServiceGetEnvironmentMonitorsArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetEnvironmentMonitorsArgs(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetEnvironmentMonitorsArgs = map[int16]string{
	1: "req",
}

type EpidemiologyServiceGetEnvironmentMonitorsResult struct {
	Success *GetEnvironmentMonitorsResponse `thrift:"success,0,optional" frugal:"0,optional,GetEnvironmentMonitorsResponse" json:"success,omitempty"`
}

func NewEpidemiologyServiceGetEnvironmentMonitorsResult() *EpidemiologyServiceGetEnvironmentMonitorsResult {
	return &EpidemiologyServiceGetEnvironmentMonitorsResult{}
}

func (p *EpidemiologyServiceGetEnvironmentMonitorsResult) InitDefault() {
}

var EpidemiologyServiceGetEnvironmentMonitorsResult_Success_DEFAULT *GetEnvironmentMonitorsResponse

func (p *EpidemiologyServiceGetEnvironmentMonitorsResult) GetSuccess() (v *GetEnvironmentMonitorsResponse) {
	if !p.IsSetSuccess() {
		return EpidemiologyServiceGetEnvironmentMonitorsResult_Success_DEFAULT
	}
	return p.Success
}
func (p *EpidemiologyServiceGetEnvironmentMonitorsResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetEnvironmentMonitorsResponse)
}

func (p *EpidemiologyServiceGetEnvironmentMonitorsResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *EpidemiologyServiceGetEnvironmentMonitorsResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetEnvironmentMonitorsResult(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetEnvironmentMonitorsResult = map[int16]string{
	0: "success",
}

type EpidemiologyServiceCreateLifestyleSurveyArgs struct {
	Req *CreateLifestyleSurveyRequest `thrift:"req,1" frugal:"1,default,CreateLifestyleSurveyRequest" json:"req"`
}

func NewEpidemiologyServiceCreateLifestyleSurveyArgs() *EpidemiologyServiceCreateLifestyleSurveyArgs {
	return &EpidemiologyServiceCreateLifestyleSurveyArgs{}
}

func (p *EpidemiologyServiceCreateLifestyleSurveyArgs) InitDefault() {
}

var EpidemiologyServiceCreateLifestyleSurveyArgs_Req_DEFAULT *CreateLifestyleSurveyRequest

func (p *EpidemiologyServiceCreateLifestyleSurveyArgs) GetReq() (v *CreateLifestyleSurveyRequest) {
	if !p.IsSetReq() {
		return EpidemiologyServiceCreateLifestyleSurveyArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *EpidemiologyServiceCreateLifestyleSurveyArgs) SetReq(val *CreateLifestyleSurveyRequest) {
	p.Req = val
}

func (p *EpidemiologyServiceCreateLifestyleSurveyArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *EpidemiologyServiceCreateLifestyleSurveyArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceCreateLifestyleSurveyArgs(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceCreateLifestyleSurveyArgs = map[int16]string{
	1: "req",
}

type EpidemiologyServiceCreateLifestyleSurveyResult struct {
	Success *CreateLifestyleSurveyResponse `thrift:"success,0,optional" frugal:"0,optional,CreateLifestyleSurveyResponse" json:"success,omitempty"`
}

func NewEpidemiologyServiceCreateLifestyleSurveyResult() *EpidemiologyServiceCreateLifestyleSurveyResult {
	return &EpidemiologyServiceCreateLifestyleSurveyResult{}
}

func (p *EpidemiologyServiceCreateLifestyleSurveyResult) InitDefault() {
}

var EpidemiologyServiceCreateLifestyleSurveyResult_Success_DEFAULT *CreateLifestyleSurveyResponse

func (p *EpidemiologyServiceCreateLifestyleSurveyResult) GetSuccess() (v *CreateLifestyleSurveyResponse) {
	if !p.IsSetSuccess() {
		return EpidemiologyServiceCreateLifestyleSurveyResult_Success_DEFAULT
	}
	return p.Success
}
func (p *EpidemiologyServiceCreateLifestyleSurveyResult) SetSuccess(x interface{}) {
	p.Success = x.(*CreateLifestyleSurveyResponse)
}

func (p *EpidemiologyServiceCreateLifestyleSurveyResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *EpidemiologyServiceCreateLifestyleSurveyResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceCreateLifestyleSurveyResult(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceCreateLifestyleSurveyResult = map[int16]string{
	0: "success",
}

type EpidemiologyServiceGetLifestyleSurveyArgs struct {
	Req *GetLifestyleSurveyRequest `thrift:"req,1" frugal:"1,default,GetLifestyleSurveyRequest" json:"req"`
}

func NewEpidemiologyServiceGetLifestyleSurveyArgs() *EpidemiologyServiceGetLifestyleSurveyArgs {
	return &EpidemiologyServiceGetLifestyleSurveyArgs{}
}

func (p *EpidemiologyServiceGetLifestyleSurveyArgs) InitDefault() {
}

var EpidemiologyServiceGetLifestyleSurveyArgs_Req_DEFAULT *GetLifestyleSurveyRequest

func (p *EpidemiologyServiceGetLifestyleSurveyArgs) GetReq() (v *GetLifestyleSurveyRequest) {
	if !p.IsSetReq() {
		return EpidemiologyServiceGetLifestyleSurveyArgs_Req_DEFAULT
	}
	return p.Req
}
func (p *EpidemiologyServiceGetLifestyleSurveyArgs) SetReq(val *GetLifestyleSurveyRequest) {
	p.Req = val
}

func (p *EpidemiologyServiceGetLifestyleSurveyArgs) IsSetReq() bool {
	return p.Req != nil
}

func (p *EpidemiologyServiceGetLifestyleSurveyArgs) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetLifestyleSurveyArgs(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetLifestyleSurveyArgs = map[int16]string{
	1: "req",
}

type EpidemiologyServiceGetLifestyleSurveyResult struct {
	Success *GetLifestyleSurveyResponse `thrift:"success,0,optional" frugal:"0,optional,GetLifestyleSurveyResponse" json:"success,omitempty"`
}

func NewEpidemiologyServiceGetLifestyleSurveyResult() *EpidemiologyServiceGetLifestyleSurveyResult {
	return &EpidemiologyServiceGetLifestyleSurveyResult{}
}

func (p *EpidemiologyServiceGetLifestyleSurveyResult) InitDefault() {
}

var EpidemiologyServiceGetLifestyleSurveyResult_Success_DEFAULT *GetLifestyleSurveyResponse

func (p *EpidemiologyServiceGetLifestyleSurveyResult) GetSuccess() (v *GetLifestyleSurveyResponse) {
	if !p.IsSetSuccess() {
		return EpidemiologyServiceGetLifestyleSurveyResult_Success_DEFAULT
	}
	return p.Success
}
func (p *EpidemiologyServiceGetLifestyleSurveyResult) SetSuccess(x interface{}) {
	p.Success = x.(*GetLifestyleSurveyResponse)
}

func (p *EpidemiologyServiceGetLifestyleSurveyResult) IsSetSuccess() bool {
	return p.Success != nil
}

func (p *EpidemiologyServiceGetLifestyleSurveyResult) String() string {
	if p == nil {
		return "<nil>"
	}
	return fmt.Sprintf("EpidemiologyServiceGetLifestyleSurveyResult(%+v)", *p)
}

var fieldIDToName_EpidemiologyServiceGetLifestyleSurveyResult = map[int16]string{
	0: "success",
}
